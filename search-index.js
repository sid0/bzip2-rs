var searchIndex = {};
searchIndex["bzip2"] = {"doc":"Bzip compression for Rust","items":[[3,"Compress","bzip2","Representation of an in-memory compression stream.",null,null],[3,"Decompress","","Representation of an in-memory decompression stream.",null,null],[4,"Action","","Possible actions to take on compression.",null,null],[13,"Run","","Normal compression.",0,null],[13,"Flush","","Request that the current compression block is terminate.",0,null],[13,"Finish","","Request that the compression stream be finalized.",0,null],[4,"Status","","Result of compression or decompression",null,null],[13,"Ok","","Decompression went fine, nothing much to report.",1,null],[13,"FlushOk","","The Flush action on a compression went ok.",1,null],[13,"RunOk","","THe Run action on compression went ok.",1,null],[13,"FinishOk","","The Finish action on compression went ok.",1,null],[13,"StreamEnd","","The stream's end has been met, meaning that no more data can be input.",1,null],[13,"MemNeeded","","There was insufficient memory in the input or output buffer to complete the request, but otherwise everything went normally.",1,null],[4,"Error","","Fatal errors encountered when compressing/decompressing bytes.",null,null],[13,"Sequence","","The sequence of operations called on a decompression/compression stream were invalid. See methods for details.",2,null],[13,"Data","","The data being decompressed was invalid, or it was not a valid bz2 stream.",2,null],[13,"DataMagic","","The magic bz2 header wasn't present when decompressing.",2,null],[13,"Param","","The parameters to this function were invalid.",2,null],[4,"Compression","","When compressing data, the compression level can be specified by a value in this enum.",null,null],[13,"Fastest","","Optimize for the best speed of encoding.",3,null],[13,"Best","","Optimize for the size of data being encoded.",3,null],[13,"Default","","Choose the default compression, a balance between speed and size.",3,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"action"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"action"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"new","","Creates a new stream prepared for compression.",4,{"inputs":[{"name":"compression"},{"name":"u32"}],"output":{"name":"compress"}}],[11,"compress","","Compress a block of input into a block of output.",4,null],[11,"compress_vec","","Compress a block of input into an output vector.",4,null],[11,"total_in","","Total number of bytes processed as input",4,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Total number of bytes processed as output",4,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"new","","Creates a new stream prepared for decompression.",5,{"inputs":[{"name":"bool"}],"output":{"name":"decompress"}}],[11,"decompress","","Decompress a block of input into a block of output.",5,null],[11,"decompress_vec","","Decompress a block of input into an output vector.",5,null],[11,"total_in","","Total number of bytes processed as input",5,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Total number of bytes processed as output",5,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"bufread","","I/O streams for wrapping `BufRead` types as encoders/decoders",null,null],[3,"BzEncoder","bzip2::bufread","A bz2 encoder, or compressor.",null,null],[3,"BzDecoder","","A bz2 decoder, or decompressor.",null,null],[11,"new","","Creates a new encoder which will read uncompressed data from the given stream and emit the compressed stream.",6,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"bzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying stream",6,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",6,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",6,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_out","","Returns the number of bytes produced by the compressor (e.g. the number of bytes read from this stream)",6,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_in","","Returns the number of bytes consumed by the compressor (e.g. the number of bytes read from the underlying stream)",6,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",6,null],[11,"write","","",6,null],[11,"flush","","",6,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","Creates a new decoder which will decompress data read from the given stream.",7,{"inputs":[{"name":"r"}],"output":{"name":"bzdecoder"}}],[11,"get_ref","","Acquires a reference to the underlying stream",7,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",7,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",7,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_in","","Returns the number of bytes that the decompressor has consumed.",7,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_out","","Returns the number of bytes that the decompressor has produced.",7,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",7,null],[11,"write","","",7,null],[11,"flush","","",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"read","bzip2","Reader-based compression/decompression streams",null,null],[3,"BzEncoder","bzip2::read","A compression stream which wraps an uncompressed stream of data. Compressed data will be read from the stream.",null,null],[3,"BzDecoder","","A decompression stream which wraps a compressed stream of data. Decompressed data will be read from the stream.",null,null],[11,"new","","Create a new compression stream which will compress at the given level to read compress output to the give output stream.",8,{"inputs":[{"name":"r"},{"name":"compression"}],"output":{"name":"bzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying stream",8,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",8,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Unwrap the underlying writer, finishing the compression stream.",8,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_out","","Returns the number of bytes produced by the compressor (e.g. the number of bytes read from this stream)",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_in","","Returns the number of bytes consumed by the compressor (e.g. the number of bytes read from the underlying stream)",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",8,null],[11,"write","","",8,null],[11,"flush","","",8,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"new","","Create a new decompression stream, which will read compressed data from the given input stream and decompress it.",9,{"inputs":[{"name":"r"}],"output":{"name":"bzdecoder"}}],[11,"get_ref","","Acquires a reference to the underlying stream",9,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"get_mut","","Acquires a mutable reference to the underlying stream",9,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"into_inner","","Unwrap the underlying writer, finishing the compression stream.",9,{"inputs":[{"name":"self"}],"output":{"name":"r"}}],[11,"total_out","","Returns the number of bytes produced by the decompressor (e.g. the number of bytes read from this stream)",9,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_in","","Returns the number of bytes consumed by the decompressor (e.g. the number of bytes read from the underlying stream)",9,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"read","","",9,null],[11,"write","","",9,null],[11,"flush","","",9,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[0,"write","bzip2","Writer-based compression/decompression streams",null,null],[3,"BzEncoder","bzip2::write","A compression stream which will have uncompressed data written to it and will write compressed data to an output stream.",null,null],[3,"BzDecoder","","A compression stream which will have compressed data written to it and will write uncompressed data to an output stream.",null,null],[11,"new","","Create a new compression stream which will compress at the given level to write compress output to the give output stream.",10,{"inputs":[{"name":"w"},{"name":"compression"}],"output":{"name":"bzencoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",10,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",10,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"finish","","Consumes this encoder, flushing the output stream.",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"total_out","","Returns the number of bytes produced by the compressor",10,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_in","","Returns the number of bytes consumed by the compressor (e.g. the number of bytes written to this stream.)",10,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"write","","",10,null],[11,"flush","","",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",10,null],[11,"drop","","",10,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new decoding stream which will decompress all data written to it into `obj`.",11,{"inputs":[{"name":"w"}],"output":{"name":"bzdecoder"}}],[11,"get_ref","","Acquires a reference to the underlying writer.",11,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",11,{"inputs":[{"name":"self"}],"output":{"name":"w"}}],[11,"try_finish","","Attempt to finish this output stream, writing out final chunks of data.",11,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"finish","","Unwrap the underlying writer, finishing the compression stream.",11,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"total_out","","Returns the number of bytes produced by the decompressor",11,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"total_in","","Returns the number of bytes consumed by the decompressor (e.g. the number of bytes written to this stream.)",11,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"write","","",11,null],[11,"flush","","",11,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"read","","",11,null],[11,"drop","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","bzip2","",3,{"inputs":[{"name":"self"}],"output":{"name":"compression"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"Action"],[4,"Status"],[4,"Error"],[4,"Compression"],[3,"Compress"],[3,"Decompress"],[3,"BzEncoder"],[3,"BzDecoder"],[3,"BzEncoder"],[3,"BzDecoder"],[3,"BzEncoder"],[3,"BzDecoder"]]};
searchIndex["bzip2_sys"] = {"doc":"","items":[[3,"bz_stream","bzip2_sys","",null,null],[12,"next_in","","",0,null],[12,"avail_in","","",0,null],[12,"total_in_lo32","","",0,null],[12,"total_in_hi32","","",0,null],[12,"next_out","","",0,null],[12,"avail_out","","",0,null],[12,"total_out_lo32","","",0,null],[12,"total_out_hi32","","",0,null],[12,"state","","",0,null],[12,"bzalloc","","",0,null],[12,"bzfree","","",0,null],[12,"opaque","","",0,null],[5,"bz_internal_error","","",null,{"inputs":[{"name":"c_int"}],"output":null}],[5,"BZ2_bzCompressInit","","",null,null],[5,"BZ2_bzCompress","","",null,null],[5,"BZ2_bzCompressEnd","","",null,null],[5,"BZ2_bzDecompressInit","","",null,null],[5,"BZ2_bzDecompress","","",null,null],[5,"BZ2_bzDecompressEnd","","",null,null],[17,"BZ_RUN","","",null,null],[17,"BZ_FLUSH","","",null,null],[17,"BZ_FINISH","","",null,null],[17,"BZ_OK","","",null,null],[17,"BZ_RUN_OK","","",null,null],[17,"BZ_FLUSH_OK","","",null,null],[17,"BZ_FINISH_OK","","",null,null],[17,"BZ_STREAM_END","","",null,null],[17,"BZ_SEQUENCE_ERROR","","",null,null],[17,"BZ_PARAM_ERROR","","",null,null],[17,"BZ_MEM_ERROR","","",null,null],[17,"BZ_DATA_ERROR","","",null,null],[17,"BZ_DATA_ERROR_MAGIC","","",null,null],[17,"BZ_IO_ERROR","","",null,null],[17,"BZ_UNEXPECTED_EOF","","",null,null],[17,"BZ_OUTBUFF_FULL","","",null,null],[17,"BZ_CONFIG_ERROR","","",null,null]],"paths":[[3,"bz_stream"]]};
initSearch(searchIndex);
